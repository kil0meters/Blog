p=new Map,history.replaceState({url:window.location.href},"",window.location.href),p.set(window.location.href,Promise.resolve(document.documentElement.innerHTML)),o=new IntersectionObserver(e=>{for(t of e){var t,n=new URL(t.target.href);t.isIntersecting&&!p.get(t.target.href)&&n.host==window.location.host&&!n.pathname.includes(".")&&fetch(t.target.href).then(e=>{e.ok&&p.set(t.target.href,e.text())})}}),c=async(e,t)=>{if(promise=p.get(t),!promise)return;e.preventDefault(),history.pushState({url:t},"",t);let s=new DOMParser,n=s.parseFromString(await promise,"text/html");document.body=n.body,document.title=n.title,sl()};function sl(){var e,t=document.querySelectorAll("a");for(e of t)o.observe(e),e.onclick=e=>c(e,e.target.href)}onpopstate=e=>c(e,e.state.url),sl()